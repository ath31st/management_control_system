version: "3.9"

networks:
  kafka-net:
    name: kafka-net
    driver: bridge

services:
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      - kafka-net

  kafka:
    container_name: kafka
    image: bitnami/kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: CLIENT://:9092,EXTERNAL://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT
    networks:
      - kafka-net
    depends_on:
      - zookeeper

  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    networks:
      - kafka-net
    depends_on:
      - kafka

  keycloak:
    image: jboss/keycloak:latest
    container_name: keycloak
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres-keycloak
      DB_DATABASE: keycloakDB
      DB_USER: postgres
      DB_PASSWORD: postgres
      KEYCLOAK_USER: keycloak
      KEYCLOAK_PASSWORD: keycloak
      KEYCLOAK_IMPORT: /opt/jboss/keycloak/realm-config/realm-export.json
    volumes:
      - ./keycloak-config:/opt/jboss/keycloak/realm-config
    ports:
      - "8080:8080"
    networks:
      - kafka-net
    depends_on:
      - postgres-keycloak

  postgres-keycloak:
    image: postgres:15.0
    container_name: postgres-container-keycloak
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: keycloakDB
    restart: always
    networks:
      - kafka-net

  postgres-backend:
    image: postgres:15.0
    container_name: postgres-container-backend
    ports:
      - "5433:5433"
    command: -p 5433
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgresDB
    restart: always
    networks:
      - kafka-net

  mongodb-shop1:
    image: mongo:latest
    container_name: mongo-container-shop1
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
      MONGO_INITDB_DATABASE: mongoDBshop1
    ports:
      - "27017:27017"
    volumes:
      - ./shop1_service/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

#  gateway-service:
#    container_name: gateway-service
#    build: .
#    ports:
#      - "28888:28888"
#    networks:
#      - kafka-net

#  backend-service:
#    container_name: backend-service
#    build: .
#    ports:
#      - "28889:28889"
#    networks:
#      - kafka-net
#    depends_on:
#      - postgres-backend

#  shop1-service:
#    container_name: shop1-service
#    build: .
#    ports:
#      - "28880:28880"
#    networks:
#      - kafka-net
#    depends_on:
#      - mongodb-shop1